Commands:
  Kill:
    Kill:
      Success: "You have killed yourself." # No parameters
      SuccessOther: "{Player.DisplayName} has been killed." # Player
    KillAll:
      Success: "{Amount} players have been killed." # Amount
    KillAnimals:
      Success: "{Amount} animals have been killed." # Amount
    KillZombies:
      Success: "{Amount} animals have been killed." # Amount

  Movement:
    Ascend:
      Success: "You have been teleported upwards {Distance} metres." # Distance
      Failure: "Unable to teleport you upwards {Distance} metres." # Distance
    Descend:
      Success: "You have been teleported downwards {Distance} metres." # Distance
      Failure: "Unable to teleport you downwards {Distance} metres." # Distance
    Jump:
      Success: "You have been teleported to where you were looking." # MaxDistance
      NoPoint: "You are not looking at a point within {MaxDistance} metres." # MaxDistance
      Failure: "Unable to teleport you to the point you were looking at." # MaxDistance
    Position:
      Success: "Your position is X: {X} Y: {Y} Z: {Z}." # X, Y, Z
      SuccessOther: "{Player.DisplayName}'s position is X: {X} Y: {Y} Z: {Z}." # X, Y, Z, Player

  Items:
    Item:
      Success: "You have been given x{Amount} {ItemAsset.ItemName}." # ItemAsset, Amount
      Failure: "Failed to spawn x{Amount} {ItemAsset.ItemName}." # ItemAsset, Amount
    ItemInfo:
      Success: "ID: {ItemAsset.ItemAssetId}, Name: {ItemAsset.ItemName}\nDescription: {ItemAsset.ItemAsset.itemDescription}\nType: {ItemAsset.ItemType}" # ItemAsset
    Repair:
      Success: "x{Amount} items in your inventory have been repaired." # Amount
    RepairHand:
      Success: "The {ItemAsset.ItemName} in your hand has been repaired." # ItemAsset
      NoEquipped: "You do not have an item in your hands." # No parameters
    RespawnItems:
      Success: "All items have been respawned." # No parameters
    SpawnItem:
      Success: "x{Amount} {ItemAsset.ItemName} have been spawned at the position X: {X} Y: {Y} Z: {Z}." # X, Y, Z, ItemAsset, Amount
      Failure: "Failed to spawn x{Amount} {ItemAsset.ItemName} at the position X: {X} Y: {Y} Z: {Z}." # X, Y, Z, ItemAsset, Amount

  Vehicles:
    RefuelVehicle:
      Success: "The {Vehicle.Asset.VehicleName} has been refueled." # Vehicle
      NoVehicle: "You are not in or looking at a vehicle." # No parameters
    RefuelVehicleAll:
      Success: "{Amount} vehicles have been refueled." # Amount
    RepairVehicle:
      Success: "The {Vehicle.Asset.VehicleName} has been repaired." # Vehicle
      NoVehicle: "You are not in or looking at a vehicle." # No parameters
    RepairVehicleAll:
      Success: "{Amount} vehicles have been repaired." # Amount
    SpawnVehicle:
      Success: "A {VehicleAsset.VehicleName} has been spawned at the position X: {X} Y: {Y} Z: {Z}." # X, Y, Z, VehicleAsset
      Failure: "Failed to spawn a {VehicleAsset.VehicleName} at the position X: {X} Y: {Y} Z: {Z}." # X, Y, Z, VehicleAsset
    Vehicle:
      Success: "You have spawned a {VehicleAsset.VehicleName}." # VehicleAsset
      SuccessOther: "You have spawned a {VehicleAsset.VehicleName} for {Player.DisplayName}." # DisplayName
      Failure: "Failed to spawn a {VehicleAsset.VehicleName}." # VehicleAsset

  Warps:
    Warp:
      Success: "You have been teleported to the {Warp.Name} warp." # Warp
      Failure: "Unable to teleport you to the {Warp.Name} warp." # Warp
      Cooldown: "You must wait {TimeLeft} until you can use the {Warp.Name} warp again." # Warp, TimeLeft
    WarpAdd:
      SuccessAdd: "A new warp named {WarpName} has been added (cooldown: {Cooldown})." # WarpName, Cooldown
      SuccessUpdate: "The existing warp named {WarpName} has been updated (cooldown: {Cooldown})." # WarpName, Cooldown

  Errors:
    Input: # All the following have the Input parameter
      NoItem: "The item '{Input}' could not be found."
      NoVehicle: "The vehicle '{Input}' could not be found."
      NoPlayer: "The player '{Input}' could not be found."
      NoLocation: "The player '{Input}' could not be found."
      NoSteamID: "The input '{Input}' could not be parsed to a Steam 64 ID."
      NoBoolean: "The input '{Input}' could not be parsed. It must be true or false."
      NoShort: "The input '{Input}' could not be parsed to a number (without decimals)."
      NoInteger: "The input '{Input}' could not be parsed to a number (without decimals)."
      NoLong: "The input '{Input}' could not be parsed to a number (without decimals)."
      NoUnsignedShort: "The input '{Input}' could not be parsed to a non-negative number (without decimals)."
      NoUnsignedInteger: "The input '{Input}' could not be parsed to a non-negative number (without decimals)."
      NoUnsignedLong: "The input '{Input}' could not be parsed to a non-negative number (without decimals)."
      NoFloat: "The input '{Input}' could not be parsed to a decimal number."
      NoDouble: "The input '{Input}' could not be parsed to a decimal number."
      NoDecimal: "The input '{Input}' could not be parsed to a decimal number."
      OutOfRange:
        LowerBound: "The {ParameterName} must be greater than or equal to {LowerBound} (input: {Input})." # ParameterName, LowerBound
        UpperBound: "The {ParameterName} must be less than or equal to {UpperBound} (input: {Input})." # ParameterName, UpperBound
        BothBounds: "The {ParameterName} must be greater than or equal to {LowerBound} and less than or equal to {UpperBound} (input: {Input})." # ParameterName, LowerBound, UpperBound
    WrongActor:
      Player: "You must be a player to use this command."